// Code generated by eventcode --decl_file=distentities_event.go gen_eventtab --package=dent --name=distEntitiesEventTab; DO NOT EDIT.

package dent

import (
	event "git.golaxy.org/core/event"
	container "git.golaxy.org/core/util/container"
)

type IDistEntitiesEventTab interface {
	EventDistEntityOnline() event.IEvent
	EventDistEntityOffline() event.IEvent
}

type distEntitiesEventTab [2]event.Event

func (eventTab *distEntitiesEventTab) Init(autoRecover bool, reportError chan error, recursion event.EventRecursion, hookAllocator container.Allocator[event.Hook], gcCollector container.GCCollector) {
	(*eventTab)[0].Init(autoRecover, reportError, recursion, hookAllocator, gcCollector)
	(*eventTab)[1].Init(autoRecover, reportError, recursion, hookAllocator, gcCollector)
}

func (eventTab *distEntitiesEventTab) Get(id int) event.IEvent {
	return &(*eventTab)[id]
}

func (eventTab *distEntitiesEventTab) Open() {
	for i := range *eventTab {
		(*eventTab)[i].Open()
	}
}

func (eventTab *distEntitiesEventTab) Close() {
	for i := range *eventTab {
		(*eventTab)[i].Close()
	}
}

func (eventTab *distEntitiesEventTab) Clean() {
	for i := range *eventTab {
		(*eventTab)[i].Clean()
	}
}

const EventDistEntityOnlineId int = 0

func (eventTab *distEntitiesEventTab) EventDistEntityOnline() event.IEvent {
	return &(*eventTab)[EventDistEntityOnlineId]
}

const EventDistEntityOfflineId int = 1

func (eventTab *distEntitiesEventTab) EventDistEntityOffline() event.IEvent {
	return &(*eventTab)[EventDistEntityOfflineId]
}

