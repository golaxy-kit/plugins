// Code generated by 'yaegi extract git.golaxy.org/framework/plugins/goscr'. DO NOT EDIT.

package fwlib

import (
	"git.golaxy.org/framework/plugins/goscr"
	"reflect"
)

func init() {
	Symbols["git.golaxy.org/framework/plugins/goscr/goscr"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Install":   reflect.ValueOf(&goscr.Install).Elem(),
		"Name":      reflect.ValueOf(&goscr.Name).Elem(),
		"Uninstall": reflect.ValueOf(&goscr.Uninstall).Elem(),
		"Using":     reflect.ValueOf(&goscr.Using).Elem(),
		"With":      reflect.ValueOf(&goscr.With).Elem(),

		// type definitions
		"GoScrOptions": reflect.ValueOf((*goscr.GoScrOptions)(nil)),
		"IGoScr":       reflect.ValueOf((*goscr.IGoScr)(nil)),

		// interface wrapper definitions
		"_IGoScr": reflect.ValueOf((*_git_golaxy_org_framework_plugins_goscr_IGoScr)(nil)),
	}
}

// _git_golaxy_org_framework_plugins_goscr_IGoScr is an interface wrapper for IGoScr type
type _git_golaxy_org_framework_plugins_goscr_IGoScr struct {
	IValue interface{}
}
